{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","props","match","otherTeam","team1","teamName","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","console","log","fetchMatches","title","value","totalWins","color","totalMatches","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","length","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a5da00a.chunk.js","sourcesContent":["import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchDetailCard.scss'\r\n\r\nexport const MatchDetailCard = (props) => {\r\n\r\n    if(!props.match) return null;\r\n    const otherTeam = props.match.team1 === props.teamName ? props.match.team2 :\r\n                                                                props.match.team1\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = props.teamName === props.match.matchWinner;\r\n\r\n\r\n    return (\r\n        <div className={isMatchWon? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n\r\n            <div>\r\n                <span className=\"vs\">vs</span>\r\n                <h1>\r\n                    <Link to={otherTeamRoute}>\r\n                        {otherTeam}\r\n                    </Link>\r\n                </h1>\r\n                <h2 className=\"match-date\">{props.match.date}</h2>\r\n                <h3 className=\"match-venue\">{props.match.venue}</h3>\r\n                <h3 className=\"match-result\">\r\n                    {props.match.matchWinner} won\r\n                    by {props.match.resultMargin} {props.match.result}\r\n                </h3>\r\n            </div>\r\n\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{props.match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{props.match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{props.match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{props.match.umpire1}, {props.match.umpire2}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchSmallCard.scss'\r\n\r\nexport const MatchSmallCard = (props) => {\r\n\r\n    const otherTeam = props.match.team1 === props.teamName ? props.match.team2 :\r\n        props.match.team1\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n\r\n    const isMatchWon = props.teamName === props.match.matchWinner;\r\n\r\n    return (\r\n        <div className={`MatchSmallCard ${isMatchWon ? 'won-card':'lost-card'}`}>\r\n            <span>vs</span>\r\n            <h1>  <Link to={otherTeamRoute}>{otherTeam}</Link> </h1>\r\n            <p className=\"match-result\">\r\n                {props.match.matchWinner} won\r\n                by {props.match.resultMargin} {props.match.result}\r\n            </p>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n","import {React, useEffect, useState} from 'react'\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport {MatchSmallCard} from \"../components/MatchSmallCard\";\r\nimport {useParams} from 'react-router-dom'\r\nimport './TeamPge.scss';\r\nimport {PieChart} from 'react-minimal-pie-chart'\r\nimport {Link} from 'react-router-dom'\r\nimport back from '../back.png'\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team,setTeam] = useState({\r\n        matches : []\r\n    });\r\n\r\n    const {teamName} = useParams();\r\n\r\n    useEffect(() => {\r\n            const fetchMatches = async () => {\r\n                //fetch returns promise\r\n                const response = await fetch(`http://localhost:8085/teams/${teamName}`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setTeam(data);\r\n            };\r\n\r\n            fetchMatches();\r\n            },[teamName] //when Link is clicked path so teamname changes\r\n                            // it does not send request to server just change the path\r\n                            // when path changes you fetch again\r\n        );\r\n\r\n\r\n\r\n    //fetch returned null\r\n    if(!team || !team.teamName ){\r\n        return <h1>Team Not Found</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n\r\n\r\n\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">\r\n                    <Link to={\"/\"}> <span>{\"<<\"}</span>  </Link>\r\n\r\n                        {team.teamName}</h1>\r\n            </div>\r\n\r\n            <div className=\"win-loss-section\">\r\n                <h3>Wins/Losses</h3>\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins,\r\n                            color: '#a34d5d' },\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n\r\n                <MatchDetailCard  teamName={team.teamName} match={team.matches[0]}/>\r\n            </div>\r\n\r\n            {\r\n                team.matches.slice(1).map(match =>\r\n                    <MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)\r\n            }\r\n\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${team.teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>\r\n                   >More\r\n                </Link>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './YearSelector.scss'\r\n\r\nexport const YearSelector = (props) =>{\r\n\r\n    const start_year = process.env.REACT_APP_DATA_START_YEAR\r\n    const end_year = process.env.REACT_APP_DATA_END_YEAR\r\n\r\n    let years = []\r\n    for(let i = start_year ; i <= end_year; i++){\r\n        years.push(i);\r\n    }\r\n\r\n    return(\r\n        <ol className={\"YearSelector\"}>\r\n            {   years.map(year=>\r\n                    (\r\n                        <li>\r\n                            <Link to={`/teams/${props.teamName}/matches/${year}`}>\r\n                                {year}\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                )\r\n            }\r\n        </ol>\r\n    )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport {useParams} from 'react-router-dom'\r\nimport './MatchPage.scss'\r\nimport {YearSelector} from \"../components/YearSelector\";\r\n\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches,setMatches] = useState([]);\r\n\r\n\r\n    const {teamName,year} = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n            const fetchMatches = async () => {\r\n                //fetch returns promise\r\n                const response = await\r\n                    fetch(`http://localhost:8085/teams/${teamName}/matches/?year=${year}`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setMatches(data);\r\n            };\r\n\r\n            fetchMatches();\r\n        },[year] //when Link is clicked path so teamname changes\r\n        // it does not send request to server just change the path\r\n        // when path changes you fetch again\r\n    );\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n\r\n            <div>\r\n                <h1 className={\"page-heading\"}>{teamName} matches in {year}</h1>\r\n                {\r\n                    matches.length > 0 ?\r\n                    matches.map(match =>\r\n                    <MatchDetailCard key={match.id} teamName={teamName} match={match}/>)\r\n                        :<h3 className={\"no-match-text\"}>No Match is Found</h3>\r\n\r\n\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import {React} from 'react';\r\nimport './TeamTile.scss';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const TeamTile = ({teamName}) =>{\r\n\r\n    return(\r\n        <div className={\"TeamTile\"}>\r\n            <Link to={`teams/${teamName}`}>\r\n                <h1>{teamName}</h1>\r\n            </Link>\r\n\r\n        </div>\r\n    )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport './HomePage.scss';\r\nimport {TeamTile} from \"../components/TeamTile\";\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams,setTeams] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n            const fetchAllTeams = async () => {\r\n                //fetch returns promise\r\n                const response = await fetch(`http://localhost:8085/teams`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setTeams(data);\r\n            };\r\n\r\n            fetchAllTeams();\r\n        },[] //when Link is clicked path so teamname changes\r\n        // it does not send request to server just change the path\r\n        // when path changes you fetch again\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\"> Spring IPL Dashboard</h1>\r\n            </div>\r\n\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","\nimport './App.scss';\nimport {TeamPage} from \"./pages/TeamPage\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {MatchPage} from \"./pages/MatchPage\";\nimport {HomePage} from \"./pages/HomePage\";\n\n\n//TeamPage path is more general than upper so it takes place below\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Switch>\n\n                <Route path=\"/teams/:teamName/matches/:year\">\n                    <MatchPage/>\n                </Route>\n\n\n                <Route path=\"/teams/:teamName\">\n                    <TeamPage/>\n                </Route>\n\n                <Route path=\"/\">\n                    <HomePage/>\n                </Route>\n\n\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}